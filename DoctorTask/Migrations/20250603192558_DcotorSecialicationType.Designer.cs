// <auto-generated />
using DoctorTask.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoctorTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250603192558_DcotorSecialicationType")]
    partial class DcotorSecialicationType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoctorTask.Entity.DcotorSecialicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dcotorSecialicationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dermatology"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Orthopedics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Neurology"
                        });
                });

            modelBuilder.Entity("DoctorTask.Entity.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Img = "doctor1.jpg",
                            Name = "Dr. John Smith",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Img = "doctor2.jpg",
                            Name = "Dr. Sarah Johnson",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 3,
                            Img = "doctor4.jpg",
                            Name = "Dr. Emily Davis",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 4,
                            Img = "doctor3.jpg",
                            Name = "Dr. Michael Lee",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 5,
                            Img = "doctor5.jpg",
                            Name = "Dr. William Clark",
                            SpecializationId = 5
                        });
                });

            modelBuilder.Entity("DoctorTask.Entity.Doctor", b =>
                {
                    b.HasOne("DoctorTask.Entity.DcotorSecialicationType", "dcotorSecialicationType")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dcotorSecialicationType");
                });
#pragma warning restore 612, 618
        }
    }
}
